//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuizWebsite.QuizService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/QuizServices")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommonProperties", Namespace="http://schemas.datacontract.org/2004/07/DataModel")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(QuizWebsite.QuizService.Questions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(QuizWebsite.QuizService.QuestionOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(QuizWebsite.QuizService.Users))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(QuizWebsite.QuizService.Quiz))]
    public partial class CommonProperties : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdatedByField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((this.UpdatedByField.Equals(value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Questions", Namespace="http://schemas.datacontract.org/2004/07/DataModel")]
    [System.SerializableAttribute()]
    public partial class Questions : QuizWebsite.QuizService.CommonProperties {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuizIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionText {
            get {
                return this.QuestionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionTextField, value) != true)) {
                    this.QuestionTextField = value;
                    this.RaisePropertyChanged("QuestionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuizId {
            get {
                return this.QuizIdField;
            }
            set {
                if ((this.QuizIdField.Equals(value) != true)) {
                    this.QuizIdField = value;
                    this.RaisePropertyChanged("QuizId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionOptions", Namespace="http://schemas.datacontract.org/2004/07/DataModel")]
    [System.SerializableAttribute()]
    public partial class QuestionOptions : QuizWebsite.QuizService.CommonProperties {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CorrectOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OptionOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptionTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CorrectOption {
            get {
                return this.CorrectOptionField;
            }
            set {
                if ((this.CorrectOptionField.Equals(value) != true)) {
                    this.CorrectOptionField = value;
                    this.RaisePropertyChanged("CorrectOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OptionOrder {
            get {
                return this.OptionOrderField;
            }
            set {
                if ((this.OptionOrderField.Equals(value) != true)) {
                    this.OptionOrderField = value;
                    this.RaisePropertyChanged("OptionOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OptionText {
            get {
                return this.OptionTextField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionTextField, value) != true)) {
                    this.OptionTextField = value;
                    this.RaisePropertyChanged("OptionText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionID {
            get {
                return this.QuestionIDField;
            }
            set {
                if ((this.QuestionIDField.Equals(value) != true)) {
                    this.QuestionIDField = value;
                    this.RaisePropertyChanged("QuestionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/DataModel")]
    [System.SerializableAttribute()]
    public partial class Users : QuizWebsite.QuizService.CommonProperties {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Quiz", Namespace="http://schemas.datacontract.org/2004/07/DataModel")]
    [System.SerializableAttribute()]
    public partial class Quiz : QuizWebsite.QuizService.CommonProperties {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowReAttemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PassMarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuizNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuizUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReAttemptDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequiresLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowReAttempt {
            get {
                return this.AllowReAttemptField;
            }
            set {
                if ((this.AllowReAttemptField.Equals(value) != true)) {
                    this.AllowReAttemptField = value;
                    this.RaisePropertyChanged("AllowReAttempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hours {
            get {
                return this.HoursField;
            }
            set {
                if ((this.HoursField.Equals(value) != true)) {
                    this.HoursField = value;
                    this.RaisePropertyChanged("Hours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((this.MinutesField.Equals(value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PassMarks {
            get {
                return this.PassMarksField;
            }
            set {
                if ((this.PassMarksField.Equals(value) != true)) {
                    this.PassMarksField = value;
                    this.RaisePropertyChanged("PassMarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuizNotes {
            get {
                return this.QuizNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.QuizNotesField, value) != true)) {
                    this.QuizNotesField = value;
                    this.RaisePropertyChanged("QuizNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuizUrl {
            get {
                return this.QuizUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.QuizUrlField, value) != true)) {
                    this.QuizUrlField = value;
                    this.RaisePropertyChanged("QuizUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReAttemptDuration {
            get {
                return this.ReAttemptDurationField;
            }
            set {
                if ((this.ReAttemptDurationField.Equals(value) != true)) {
                    this.ReAttemptDurationField = value;
                    this.RaisePropertyChanged("ReAttemptDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiresLogin {
            get {
                return this.RequiresLoginField;
            }
            set {
                if ((this.RequiresLoginField.Equals(value) != true)) {
                    this.RequiresLoginField = value;
                    this.RaisePropertyChanged("RequiresLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomResponse", Namespace="http://schemas.datacontract.org/2004/07/DataModel")]
    [System.SerializableAttribute()]
    public partial class CustomResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuizCategories", Namespace="http://schemas.datacontract.org/2004/07/DataModel")]
    [System.SerializableAttribute()]
    public partial class QuizCategories : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QuizService.IQuizService")]
    public interface IQuizService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/GetData", ReplyAction="http://tempuri.org/IQuizService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/GetData", ReplyAction="http://tempuri.org/IQuizService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IQuizService/GetDataUsingDataContractResponse")]
        QuizWebsite.QuizService.CompositeType GetDataUsingDataContract(QuizWebsite.QuizService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IQuizService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.CompositeType> GetDataUsingDataContractAsync(QuizWebsite.QuizService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/SaveQuiz", ReplyAction="http://tempuri.org/IQuizService/SaveQuizResponse")]
        QuizWebsite.QuizService.CustomResponse SaveQuiz(QuizWebsite.QuizService.Quiz objQuiz);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/SaveQuiz", ReplyAction="http://tempuri.org/IQuizService/SaveQuizResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.CustomResponse> SaveQuizAsync(QuizWebsite.QuizService.Quiz objQuiz);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/CheckUser", ReplyAction="http://tempuri.org/IQuizService/CheckUserResponse")]
        bool CheckUser(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/CheckUser", ReplyAction="http://tempuri.org/IQuizService/CheckUserResponse")]
        System.Threading.Tasks.Task<bool> CheckUserAsync(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/LoadAllQuiz", ReplyAction="http://tempuri.org/IQuizService/LoadAllQuizResponse")]
        QuizWebsite.QuizService.Quiz[] LoadAllQuiz(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/LoadAllQuiz", ReplyAction="http://tempuri.org/IQuizService/LoadAllQuizResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.Quiz[]> LoadAllQuizAsync(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/LoadQuizById", ReplyAction="http://tempuri.org/IQuizService/LoadQuizByIdResponse")]
        QuizWebsite.QuizService.Quiz LoadQuizById(string QuizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/LoadQuizById", ReplyAction="http://tempuri.org/IQuizService/LoadQuizByIdResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.Quiz> LoadQuizByIdAsync(string QuizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/LoadQuizQuestions", ReplyAction="http://tempuri.org/IQuizService/LoadQuizQuestionsResponse")]
        System.Tuple<QuizWebsite.QuizService.Quiz, QuizWebsite.QuizService.Questions[]> LoadQuizQuestions(string QuizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/LoadQuizQuestions", ReplyAction="http://tempuri.org/IQuizService/LoadQuizQuestionsResponse")]
        System.Threading.Tasks.Task<System.Tuple<QuizWebsite.QuizService.Quiz, QuizWebsite.QuizService.Questions[]>> LoadQuizQuestionsAsync(string QuizId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/AddQuestion", ReplyAction="http://tempuri.org/IQuizService/AddQuestionResponse")]
        QuizWebsite.QuizService.Questions AddQuestion(QuizWebsite.QuizService.Questions Question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/AddQuestion", ReplyAction="http://tempuri.org/IQuizService/AddQuestionResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.Questions> AddQuestionAsync(QuizWebsite.QuizService.Questions Question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/SaveQuestionOptions", ReplyAction="http://tempuri.org/IQuizService/SaveQuestionOptionsResponse")]
        QuizWebsite.QuizService.CustomResponse SaveQuestionOptions(QuizWebsite.QuizService.QuestionOptions[] Options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/SaveQuestionOptions", ReplyAction="http://tempuri.org/IQuizService/SaveQuestionOptionsResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.CustomResponse> SaveQuestionOptionsAsync(QuizWebsite.QuizService.QuestionOptions[] Options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/LoadQuestionOptions", ReplyAction="http://tempuri.org/IQuizService/LoadQuestionOptionsResponse")]
        QuizWebsite.QuizService.QuestionOptions[] LoadQuestionOptions(string QuestionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/LoadQuestionOptions", ReplyAction="http://tempuri.org/IQuizService/LoadQuestionOptionsResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.QuestionOptions[]> LoadQuestionOptionsAsync(string QuestionId);

        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/DeleteQuizQuestions", ReplyAction="http://tempuri.org/IQuizService/DeleteQuizQuestionsResponse")]
        System.Tuple<QuizWebsite.QuizService.Quiz, QuizWebsite.QuizService.Questions[]> DeleteQuizQuestions(string QuizId, string QuestionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/DeleteQuizQuestions", ReplyAction="http://tempuri.org/IQuizService/DeleteQuizQuestionsResponse")]
        System.Threading.Tasks.Task<System.Tuple<QuizWebsite.QuizService.Quiz, QuizWebsite.QuizService.Questions[]>> DeleteQuizQuestionsAsync(string QuizId, string QuestionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/DeleteQuestionOption", ReplyAction="http://tempuri.org/IQuizService/DeleteQuestionOptionResponse")]
        QuizWebsite.QuizService.QuestionOptions[] DeleteQuestionOption(string QuestionId, string OptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/DeleteQuestionOption", ReplyAction="http://tempuri.org/IQuizService/DeleteQuestionOptionResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.QuestionOptions[]> DeleteQuestionOptionAsync(string QuestionId, string OptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/SaveQuizCategory", ReplyAction="http://tempuri.org/IQuizService/SaveQuizCategoryResponse")]
        QuizWebsite.QuizService.QuizCategories[] SaveQuizCategory(QuizWebsite.QuizService.QuizCategories Obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/SaveQuizCategory", ReplyAction="http://tempuri.org/IQuizService/SaveQuizCategoryResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.QuizCategories[]> SaveQuizCategoryAsync(QuizWebsite.QuizService.QuizCategories Obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/LoadAllCategories", ReplyAction="http://tempuri.org/IQuizService/LoadAllCategoriesResponse")]
        QuizWebsite.QuizService.QuizCategories[] LoadAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/LoadAllCategories", ReplyAction="http://tempuri.org/IQuizService/LoadAllCategoriesResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.QuizCategories[]> LoadAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/SaveUser", ReplyAction="http://tempuri.org/IQuizService/SaveUserResponse")]
        QuizWebsite.QuizService.Users SaveUser(QuizWebsite.QuizService.Users objUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuizService/SaveUser", ReplyAction="http://tempuri.org/IQuizService/SaveUserResponse")]
        System.Threading.Tasks.Task<QuizWebsite.QuizService.Users> SaveUserAsync(QuizWebsite.QuizService.Users objUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuizServiceChannel : QuizWebsite.QuizService.IQuizService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuizServiceClient : System.ServiceModel.ClientBase<QuizWebsite.QuizService.IQuizService>, QuizWebsite.QuizService.IQuizService {
        
        public QuizServiceClient() {
        }
        
        public QuizServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuizServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuizServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuizServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public QuizWebsite.QuizService.CompositeType GetDataUsingDataContract(QuizWebsite.QuizService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.CompositeType> GetDataUsingDataContractAsync(QuizWebsite.QuizService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public QuizWebsite.QuizService.CustomResponse SaveQuiz(QuizWebsite.QuizService.Quiz objQuiz) {
            return base.Channel.SaveQuiz(objQuiz);
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.CustomResponse> SaveQuizAsync(QuizWebsite.QuizService.Quiz objQuiz) {
            return base.Channel.SaveQuizAsync(objQuiz);
        }
        
        public bool CheckUser(string UserName) {
            return base.Channel.CheckUser(UserName);
        }
        
        public System.Threading.Tasks.Task<bool> CheckUserAsync(string UserName) {
            return base.Channel.CheckUserAsync(UserName);
        }
        
        public QuizWebsite.QuizService.Quiz[] LoadAllQuiz(string UserId) {
            return base.Channel.LoadAllQuiz(UserId);
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.Quiz[]> LoadAllQuizAsync(string UserId) {
            return base.Channel.LoadAllQuizAsync(UserId);
        }
        
        public QuizWebsite.QuizService.Quiz LoadQuizById(string QuizId) {
            return base.Channel.LoadQuizById(QuizId);
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.Quiz> LoadQuizByIdAsync(string QuizId) {
            return base.Channel.LoadQuizByIdAsync(QuizId);
        }
        
        public System.Tuple<QuizWebsite.QuizService.Quiz, QuizWebsite.QuizService.Questions[]> LoadQuizQuestions(string QuizId) {
            return base.Channel.LoadQuizQuestions(QuizId);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<QuizWebsite.QuizService.Quiz, QuizWebsite.QuizService.Questions[]>> LoadQuizQuestionsAsync(string QuizId) {
            return base.Channel.LoadQuizQuestionsAsync(QuizId);
        }
        
        public QuizWebsite.QuizService.Questions AddQuestion(QuizWebsite.QuizService.Questions Question) {
            return base.Channel.AddQuestion(Question);
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.Questions> AddQuestionAsync(QuizWebsite.QuizService.Questions Question) {
            return base.Channel.AddQuestionAsync(Question);
        }
        
        public QuizWebsite.QuizService.CustomResponse SaveQuestionOptions(QuizWebsite.QuizService.QuestionOptions[] Options) {
            return base.Channel.SaveQuestionOptions(Options);
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.CustomResponse> SaveQuestionOptionsAsync(QuizWebsite.QuizService.QuestionOptions[] Options) {
            return base.Channel.SaveQuestionOptionsAsync(Options);
        }
        
        public QuizWebsite.QuizService.QuestionOptions[] LoadQuestionOptions(string QuestionId) {
            return base.Channel.LoadQuestionOptions(QuestionId);
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.QuestionOptions[]> LoadQuestionOptionsAsync(string QuestionId) {
            return base.Channel.LoadQuestionOptionsAsync(QuestionId);
        }
        
        public System.Tuple<QuizWebsite.QuizService.Quiz, QuizWebsite.QuizService.Questions[]> DeleteQuizQuestions(string QuizId, string QuestionId) {
            return base.Channel.DeleteQuizQuestions(QuizId, QuestionId);
        }
        
        public System.Threading.Tasks.Task<System.Tuple<QuizWebsite.QuizService.Quiz, QuizWebsite.QuizService.Questions[]>> DeleteQuizQuestionsAsync(string QuizId, string QuestionId) {
            return base.Channel.DeleteQuizQuestionsAsync(QuizId, QuestionId);
        }
        
        public QuizWebsite.QuizService.QuestionOptions[] DeleteQuestionOption(string QuestionId, string OptionId) {
            return base.Channel.DeleteQuestionOption(QuestionId, OptionId);
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.QuestionOptions[]> DeleteQuestionOptionAsync(string QuestionId, string OptionId) {
            return base.Channel.DeleteQuestionOptionAsync(QuestionId, OptionId);
        }
        
        public QuizWebsite.QuizService.QuizCategories[] SaveQuizCategory(QuizWebsite.QuizService.QuizCategories Obj) {
            return base.Channel.SaveQuizCategory(Obj);
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.QuizCategories[]> SaveQuizCategoryAsync(QuizWebsite.QuizService.QuizCategories Obj) {
            return base.Channel.SaveQuizCategoryAsync(Obj);
        }
        
        public QuizWebsite.QuizService.QuizCategories[] LoadAllCategories() {
            return base.Channel.LoadAllCategories();
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.QuizCategories[]> LoadAllCategoriesAsync() {
            return base.Channel.LoadAllCategoriesAsync();
        }
        
        public QuizWebsite.QuizService.Users SaveUser(QuizWebsite.QuizService.Users objUser) {
            return base.Channel.SaveUser(objUser);
        }
        
        public System.Threading.Tasks.Task<QuizWebsite.QuizService.Users> SaveUserAsync(QuizWebsite.QuizService.Users objUser) {
            return base.Channel.SaveUserAsync(objUser);
        }
    }
}
